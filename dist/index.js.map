{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;kBAAe,IAAI;;;;2BACE,cAAc;;;;oBAClB,MAAM;;;;IAEF,QAAQ;AAChB,WADQ,QAAQ,CACf,GAAG,EAAE;0BADE,QAAQ;;AAEzB,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;GAChB;;eAHkB,QAAQ;;oCAKrB;;;;;;;;AACJ,gBAAI,CAAC,cAAc,EAAE,CAAC;;;mBAGL,CAAC,eAAe,EAAE,iBAAiB,CAAC;;;AAAhD,kBAAI,IAAI,WAAA,CAAA;AACX,uCAAS,IAAI,CAAC,CAAC,UAAC,IAAI,EAAE,IAAI,EAAK;AAC7B,qCAAG,MAAK,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,QAAO,IAAI,CAAC,CAAC,CAClD,IAAI,CAAC,UAAU,GAAG,EAAE;AACnB,sBAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;iBACjB,EAAE,UAAU,GAAG,EAAE;AAChB,sBAAI,CAAC,GAAG,CAAC,CAAC;iBACX,CAAC,CAAC;eACJ,CAAC,CAAC;;;AARL,iDAAuD;;aAStD;;;AAGD,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,yBAAS,UAAU,EAAE,CAAC,CAAC;AAChD,gBAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,yBAAS,OAAO,EAAE,CAAC,CAAC;AAC7C,gBAAI,CAAC,GAAG,CAAC,QAAQ,2BAAW,CAAC;;;;;;;KAC9B;;;;;;;WAKa,0BAAG;;;;;;;;;cACN,QAAQ;;AACf,cAAI,kBAAkB,GAAG,CAAC,UAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAK;AACnD,iCAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,SAAO,KAAK,EAAE,QAAQ,CAAC,CAAC,CAChD,IAAI,CAAC,UAAU,GAAG,EAAE;AACnB,kBAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;aACjB,EAAE,UAAU,GAAG,EAAE;AAChB,kBAAI,CAAC,GAAG,CAAC,CAAC;aACX,CAAC,CAAC;WACJ,CAAC,CAAC;;AAEH,cAAI,QAAQ,CAAC,OAAO,EAAE;AACpB,8BAAkB,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;WAC9C;;AAED,mCAAS,GAAG,kBACN,QAAQ,CAAC,OAAO,gBAAI,kBAAkB,MAC3C,CAAC;;;AAhBJ,0CAAqB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,4GAAE;;SAiBzD;;;;;;;;;;;;;;;KACF;;;SAhDkB,QAAQ;;;qBAAR,QAAQ","file":"index.js","sourcesContent":["import co from 'co';\nimport passport from 'koa-passport';\nimport path from 'path';\n\nexport default class Passport {\n  constructor(app) {\n    this.app = app;\n  }\n\n  *setup() {\n    this.loadStrategies();\n\n    // Setup user serialize and deserialize in generator style\n    for (let type of ['serializeUser', 'deserializeUser']) {\n      passport[type]((user, next) => {\n        co(this.app.config.passport[type].bind(this, user))\n        .then(function (val) {\n          next(null, val);\n        }, function (err) {\n          next(err);\n        });\n      });\n    }\n\n    // Integrate with Koajs\n    this.app.application.use(passport.initialize());\n    this.app.application.use(passport.session());\n    this.app.passport = passport;\n  }\n\n  /**\n   * Setup strategy from user config\n   */\n  loadStrategies() {\n    for (let strategy of this.app.config.passport.strategies) {\n      let strategyParameters = [(email, password, next) => {\n        co(strategy.strategy.bind(this, email, password))\n        .then(function (val) {\n          next(null, val);\n        }, function (err) {\n          next(err);\n        });\n      }];\n\n      if (strategy.options) {\n        strategyParameters.unshift(strategy.options);\n      }\n\n      passport.use(\n        new strategy.adapter(...strategyParameters)\n      );\n    }\n  }\n}\n"],"sourceRoot":"/source/"}